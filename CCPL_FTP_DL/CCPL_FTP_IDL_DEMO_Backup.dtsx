<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/30/2016 2:05:17 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="TDSDEV01"
  DTS:CreatorName="TDSDEV01\Tim"
  DTS:DTSID="{0119558B-F953-416B-805E-FB82929489BF}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="1033"
  DTS:ObjectName="CCPL_FTP_IDL_DEMO_Backup"
  DTS:PackageType="5"
  DTS:VersionBuild="123"
  DTS:VersionGUID="{E24DDCF3-A434-4AA3-A2AF-31C79A94681A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{021DF953-E640-403E-A6B6-4960534BCEDE}"
      DTS:ObjectName="GetAllCustomersfromDB_SqlStatementSource">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">SELECT Cust_Code, Cust_ShortCode, InputFolder FROM     IE_Customers WHERE Cust_Code IN ('C_00001','C_00002','C_00003')</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{FDC4BD91-F672-466A-949A-D72376D4E852}"
      DTS:ObjectName="pDownloadDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">E:\Projects\FTP_Image_RnD\FTPDownload\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{39CB23EC-8C6D-4826-A982-31FA04204415}"
      DTS:ObjectName="pFTPFlag">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="The name of the remote SFTP server."
      DTS:DTSID="{A41C506A-3A99-468A-9338-C82A9CDB56E3}"
      DTS:ObjectName="pHostName"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">192.168.13.213</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Password for the FTP/SFTP login"
      DTS:DTSID="{F1F4D248-B3EF-4947-96A5-5F91F3E3E861}"
      DTS:ObjectName="pPassword"
      DTS:Required="True"
      DTS:Sensitive="True">
      <DTS:Property
        DTS:Name="ParameterValue">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="ParameterValue"
          Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAxqrTZKLPiUG4mrn9IUi28QAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAByNrrdLg+ry9uuA0QTarmY/HN5X9GiC5fKvnmEoLHowAAAAAAOgAAAAAIAACAAAABLApqlRZ5VaGIfPhunjPwm8eNbbjhuXF6A2jQ85wieYyAAAACRbC7hW6me1kM7ikk/U3LHbTctfrlZAf9OajG5zehEhEAAAAD4/owXstw+FapH2ObPAgga0n8OSLbt0tvE8/faH3Az3nE87XX/P9BAfPI20vtv7C+XVQLswadRaSzk9pHFhqh7</DTS:Property>
      </DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{8D0E4682-BDFD-45E8-BECB-4D87647D668C}"
      DTS:ObjectName="pPort">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">21</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Remote path on the SFTP server (in the format of /folder1/folder2)"
      DTS:DTSID="{C0B47C43-13BA-40B5-AE62-A341DB67C322}"
      DTS:ObjectName="pRemotePath"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">/TEDDY/</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="User name for the SFTP login"
      DTS:DTSID="{63C4069F-BB42-4096-B34D-9FFC5C9F186F}"
      DTS:ObjectName="pUserName"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">FTPDev01</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="The full local path to the WinSCP executable (winscp.exe)"
      DTS:DTSID="{889D7E7F-0E1E-4578-B9B4-3038B5AE6193}"
      DTS:ObjectName="pWinScpExecutablePath"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Program Files (x86)\WinSCP\WinSCP.exe</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{E2BFC793-1E53-4350-9400-D08886C56519}"
      DTS:ObjectName="pwinSCPLog">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">-1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{5EA9F036-FE84-4CD6-BB4B-F31B2BC17843}"
      DTS:ObjectName="pwinSCPLogPath">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">E:\Projects\FTP_Image_RnD\CCPL_FTP\CCPL_FTP_DL\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{37821EED-0730-479B-B35A-86E6442A1C5E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CustInputFolder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B163ACC0-4C01-4555-A244-C1C49A8EA5D1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F41D8D38-9624-4D89-9EBD-59DF0D3C51B1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CustomerLists">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5F1C04EA-ED41-480F-B3BA-5B9841E9B4A7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CustSC">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{84320D14-D16F-42C7-AF02-774A83755228}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="GETDATE()"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessDT">
      <DTS:VariableValue
        DTS:DataType="7">1/14/2020 3:09:33 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{883491F4-15A8-4CFD-9C3D-0FD43F630950}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vFileList">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E574089A-7068-4437-8CB5-1B8905AB0593}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vFolderLists">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B4D429ED-5D72-4EEB-8BB4-0B8CC6FE114A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="vTestFileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\GetAllCustomersfromDB"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{2AFAF3C4-0385-4FAE-986B-3B039B502E89}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="GetAllCustomersfromDB"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="SqlStatementSource">@[$Package::GetAllCustomersfromDB_SqlStatementSource]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B0E998D0-8253-42CD-823A-DC34DE7DF30C}"
          SQLTask:SqlStatementSource="SELECT Cust_Code, Cust_ShortCode, InputFolder FROM     IE_Customers WHERE Cust_Code IN ('C_00001','C_00002','C_00003')"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::CustomerLists" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::GetAllCustomersfromDB_SqlStatementSource"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="16"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\LoopAllCustomers"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{2B0B996A-DBB0-478E-8BF8-80CCBB05C50C}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="LoopAllCustomers">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{2545B1C5-8E0F-40F9-BA9C-DEB3BC370824}"
        DTS:ObjectName="{E5167D82-71E7-463E-82E6-81C8E05C1989}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::CustomerLists" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\LoopAllCustomers\GetDirectoryListsFromFTPServer"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{2C086511-EEA0-4949-BEF9-9F0B3E4E2D94}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="GetDirectoryListsFromFTPServer"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_0e1c927ce39f433e94e7770fcbba2c05"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::CustInputFolder,User::CustomerID,User::CustomerLists,User::CustSC,User::ProcessDT,$Package::pDownloadDirectory,$Package::pFTPFlag,$Package::pHostName,$Package::pPassword,$Package::pPort,$Package::pRemotePath,$Package::pUserName,$Package::pWinScpExecutablePath,$Package::pwinSCPLog,$Package::pwinSCPLogPath"
              ReadWriteVariables="User::vFolderLists">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0e1c927ce39f433e94e7770fcbba2c05")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0e1c927ce39f433e94e7770fcbba2c05")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[
#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using WinSCP;
using System.Collections.Generic;
using System.Collections;
using System.IO;
using System.Globalization;
#endregion

namespace ScrCallWinScp
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        public Protocol ptcl { get; private set; }

        public void Main()
        {

            //$Package::pDownloadDirectory,$Package::pFTPFlag

            //String remoteFTPDirectory = Dts.Variables["$Package::pRemotePath"].Value.ToString();
            String winscpPath = Dts.Variables["$Package::pWinScpExecutablePath"].Value.ToString();
            String ftpSite = (string)Dts.Variables["$Package::pHostName"].Value.ToString();
            String username = (string)Dts.Variables["$Package::pUserName"].GetSensitiveValue();
            String password = (string)Dts.Variables["$Package::pPassword"].GetSensitiveValue();
            int PortNumber = Convert.ToInt16(Dts.Variables["$Package::pPort"].Value.ToString());
            Boolean winSCPLog = Convert.ToBoolean(Dts.Variables["$Package::pwinSCPLog"].Value);
            String winSCPLogPath = Dts.Variables["$Package::pwinSCPLogPath"].Value.ToString();
            String DownloadDirectory = Dts.Variables["$Package::pDownloadDirectory"].Value.ToString();
            String Cust_Code= Dts.Variables["CustomerID"].Value.ToString();
            String Cust_SC = Dts.Variables["CustSC"].Value.ToString();
            DateTime Process_date = Convert.ToDateTime(Dts.Variables["ProcessDT"].Value.ToString());

            String CustInputFolder = Dts.Variables["CustInputFolder"].Value.ToString();

            String DownloadDirectoryRP;
            String LocalDirPath;

            Boolean sFTP = Convert.ToBoolean(Dts.Variables["$Package::pFTPFlag"].Value);
            if (sFTP)
            {
                ptcl = Protocol.Sftp;
            }
            else
            {
                ptcl = Protocol.Ftp;
            }
            //string sshKey = Dts.Variables["sshKey"].Value.ToString();

            TimeSpan span = new TimeSpan(0, 0, 2, 0, 0);           

            // Setup session options
            SessionOptions sessionOptions = new SessionOptions
            {
                FtpMode = FtpMode.Passive,
                Protocol = ptcl,       // Can be SFTP, FTPS, or plain FTP
                HostName = ftpSite,
                UserName = username,
                Password = password,
                //GiveUpSecurityAndAcceptAnySshHostKey = true
            };
      
            // Set up the FTP session, specifying the path to the server directory
            Session session = new Session
            {
                ExecutablePath = winscpPath
            };
            

            // Connect
            session.Open(sessionOptions);

            //ArrayList directoryLists = new ArrayList();


            // The following is used to set up a DataTable object that will store the list of files/folders retrieved from the FTP server.
            DataTable dt = new DataTable();
            ////dt.Columns.Add("FileName", typeof(String));
            ////dt.Columns.Add("ModifiedDate", typeof(DateTime));
            dt.Columns.Add("fType", typeof(String));
            dt.Columns.Add("FolderName", typeof(String));    ///---DirPath
            dt.Columns.Add("FolderModifiedDate", typeof(DateTime));
            dt.Columns.Add("Cust_Code", typeof(String));
            dt.Columns.Add("Process_date", typeof(DateTime));
            dt.Columns.Add("LocalDirPath", typeof(String));

            
            //dt.Columns.Add("NoOfFiles", typeof(int));



            // Specify which directory on the FTP server to list
            /// RemoteDirectoryInfo directory = session.ListDirectory(Dts.Variables["$Package::pRemotePath"].Value.ToString());

            IEnumerable<RemoteFileInfo> fileInfos = session.EnumerateRemoteFiles(CustInputFolder, null,EnumerationOptions.EnumerateDirectories | EnumerationOptions.AllDirectories);
          

            ///foreach (RemoteFileInfo fileInfo in directory.Files)
            foreach (RemoteFileInfo fileInfo in fileInfos)
            {
                if (fileInfo.IsDirectory)  
                {
                    // For each file found, add a new row to the DataTable object created above
                    var files=  session.EnumerateRemoteFiles(fileInfo.FullName, "*.*", EnumerationOptions.None);

                    ////LocalDirPath =  RemotePath.TranslateRemotePathToLocal(fileInfo.FullName, CustInputFolder, DownloadDirectory);
                    DownloadDirectoryRP = Path.Combine(DownloadDirectory , Cust_SC +"_"+ Process_date.ToString("yyyy_MM_dd", CultureInfo.InvariantCulture));//String.Format(Process_date.ToShortDateString(),"yyy-dd-mm")                    

                    LocalDirPath= RemotePath.TranslateRemotePathToLocal(fileInfo.FullName, CustInputFolder, DownloadDirectoryRP);

                    DataRow dr = dt.NewRow();
                    dr["FolderName"] = fileInfo.FullName;
                    dr["FolderModifiedDate"] = fileInfo.LastWriteTime; 
                    dr["fType"] = fileInfo.FileType;
                    dr["Cust_Code"]= Cust_Code;
                    dr["Process_date"]= Process_date;
                    dr["LocalDirPath"] = LocalDirPath; 
                    dt.Rows.Add(dr);
                }
               //// else
               //// {
               ////     DataRow dr = dt.NewRow();
               ////     dr["FolderName"] = fileInfo.FullName;
               ////     dr["FolderModifiedDate"] = fileInfo.LastWriteTime;
               ////     dr["fType"] = fileInfo.FileType;
               ////     dt.Rows.Add(dr);

               ////}
            }

            // After all of the files have been added to the DataTable object, set the SSIS variable vFileList
            //  to the value of that DataTable object.
            Dts.Variables["vFolderLists"].Value = dt;

            
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_0e1c927ce39f433e94e7770fcbba2c05</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_0e1c927ce39f433e94e7770fcbba2c05</msb:DisplayName>
    <msb:ProjectId>{874049AA-D3F3-4649-8FBF-81D1173F9D11}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_0e1c927ce39f433e94e7770fcbba2c05.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e1c927ce39f433e94e7770fcbba2c05.Properties.Settings.get_Default():ST_0e1c927ce39f433e94e7770fcbba2c05.Properties.Sett" +
    "ings")]

namespace ST_0e1c927ce39f433e94e7770fcbba2c05.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_0e1c927ce39f433e94e7770fcbba2c05.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{AAB0A90C-B6A2-40F8-B009-E33D7722B331}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0e1c927ce39f433e94e7770fcbba2c05</RootNamespace>
    <AssemblyName>ScrCallWinScp</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="WinSCPnet, Version=1.6.5.10071, Culture=neutral, PublicKeyToken=2271ec4a3c56d0bf, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Program Files (x86)\WinSCP\WinSCPnet.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e1c927ce39f433e94e7770fcbba2c05.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e1c927ce39f433e94e7770fcbba2c05.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e1c927ce39f433e94e7770fcbba2c05.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0e1c927ce39f433e94e7770fcbba2c05.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0e1c927ce39f433e94e7770fcbba2c05.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ScrCallWinScp.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAiEHV4AAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAhjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADQ5AABPAAAAAEAAACAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAjBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACAEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABo
OQAAAAAAAEgAAAACAAUA8CQAAIwTAAABAAAAAAAAAHw4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqAAAAGzAGAAUEAAABAAARAigQ
AAAKbxEAAApyAQAAcG8SAAAKbxMAAApvFAAACgoCKBAAAApvEQAACnJBAABwbxIAAApvEwAACm8U
AAAKCwIoEAAACm8RAAAKcmkAAHBvEgAACm8VAAAKdCMAAAEMAigQAAAKbxEAAApykQAAcG8SAAAK
bxUAAAp0IwAAAQ0CKBAAAApvEQAACnK5AABwbxIAAApvEwAACm8UAAAKKBYAAAomAigQAAAKbxEA
AApy2QAAcG8SAAAKbxMAAAooFwAACiYCKBAAAApvEQAACnIDAQBwbxIAAApvEwAACm8UAAAKJgIo
EAAACm8RAAAKcjUBAHBvEgAACm8TAAAKbxQAAAoTBAIoEAAACm8RAAAKcm8BAHBvEgAACm8TAAAK
bxQAAAoTBQIoEAAACm8RAAAKcoUBAHBvEgAACm8TAAAKbxQAAAoTBgIoEAAACm8RAAAKcpMBAHBv
EgAACm8TAAAKbxQAAAooGAAAChMHAigQAAAKbxEAAApypwEAcG8SAAAKbxMAAApvFAAAChMIAigQ
AAAKbxEAAApyxwEAcG8SAAAKbxMAAAooFwAACiwJAhYoAgAABisHAhgoAgAABhYWGBYWcxkAAAom
cxoAAAolFm8bAAAKJQIoAQAABm8cAAAKJQdvHQAACiUIbx4AAAolCW8fAAAKEwtzIAAACiUGbyEA
AAoTDBEMEQtvIgAACnMjAAAKEw0RDW8kAAAKcu0BAHDQIwAAASglAAAKbyYAAAomEQ1vJAAACnL5
AQBw0CMAAAEoJQAACm8mAAAKJhENbyQAAApyDwIAcNARAAABKCUAAApvJgAACiYRDW8kAAAKcjUC
AHDQIwAAASglAAAKbyYAAAomEQ1vJAAACnJJAgBw0BEAAAEoJQAACm8mAAAKJhENbyQAAApyYwIA
cNAjAAABKCUAAApvJgAACiYRDBEIFBtvJwAACm8oAAAKEw446wAAABEObykAAAoTDxEPbyoAAAo5
1gAAABEMEQ9vKwAACnJ9AgBwFm8nAAAKJhEEEQZyhQIAcBIHcokCAHAoLAAACigtAAAKKC4AAAoo
LwAAChMJEQ9vKwAAChEIEQkoMAAAChMKEQ1vMQAAChMQERBy+QEAcBEPbysAAApvMgAAChEQcg8C
AHARD28zAAAKjBEAAAFvMgAAChEQcu0BAHARD280AAAKjDAAAAFvMgAAChEQcjUCAHARBW8yAAAK
ERBySQIAcBEHjBEAAAFvMgAAChEQcmMCAHARCm8yAAAKEQ1vNQAAChEQbzYAAAoRDm83AAAKOgn/
///eDBEOLAcRDm84AAAK3AIoEAAACm8RAAAKcp8CAHBvEgAAChENbzkAAAoCKBAAAAoWbzoAAAoq
AAAAARAAAAIA0gL+0AMMAAAAAB4CKDsAAAoqHgIoPAAACiqufgIAAAQtHnK5AgBw0AMAAAIoJQAA
Cm89AAAKcz4AAAqAAgAABH4CAAAEKhp+AwAABCoeAoADAAAEKhp+BAAABCoeAig/AAAKKi5zCgAA
BoAEAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAoAUAACN+AAAMBgAA
AAgAACNTdHJpbmdzAAAAAAwOAAAsAwAAI1VTADgRAAAQAAAAI0dVSUQAAABIEQAARAIAACNCbG9i
AAAAAAAAAAIAAAFXHaIJCQMAAAD6ATMAFgAAAQAAADQAAAAFAAAABwAAAAsAAAACAAAAPwAAAAIA
AAATAAAAAQAAAAMAAAAEAAAABgAAAAIAAAABAAAABgAAAAEAAAABAAAAAADOBAEAAAAAAAYAFwM8
BgYApgM8BgYAYwIpBg8AsAYAAAYAkAJ3BQYA+gJ3BQYA2wJ3BQYAjQN3BQYANwN3BQYAUAN3BQYA
pwJ3BQYAwgLwAwoAawNQBAoA2gFQBAYAKwI8Bg4A5AQ4AAYARQH/BA4AOQc4AA4ARQU4ABIA2QBm
AAYADwB7AA4AsAU4ABIA0gdmAAYABgX/BAYARgIpBgYAiQf/BAYA8gVcBgYAvwViBRYAFgK4BBYA
dwK4BBYA9gFNBQoApgRQBBoA8gZgARoA4wBgAQYADAT/BAYAwQf/BAYAIQX/BA4A0QA4ABIAiQVm
AAYAkAH/BAYA+AD/BBIAOgVmAAYAAQB7AA4ASAc4AAYA3gX/BAYALAQuAA4AJgQ4AAYA2QX/BBIA
ngVmAAYAAgYmBwYA7AD/BAYA5Qd3BQAAAAAlAAAAAAABAAEAAQAQAC8FywU5AAEAAQAAABAAYwa/
BmkAAgAFAAABEAARB78GfQAEAAkAAwEAAGsHAABhAAUADAABAJoAPAERAAsFQAERALUBRAERAL0A
SAEGBl4ATAFWgFsHTwFWgJUBTwFQIAAAAACGCJQEUwEBAFggAAAAAIEInQR1AAEAZCAAAAAAhgA1
BQYAAgCIJAAAAACGGBwGBgACAJAkAAAAAIMYHAYGAAIAmCQAAAAAkwjuBVgBAgDEJAAAAACTCJ0B
ygACAMskAAAAAJMIqQFdAQIA0yQAAAAAlgiaB2MBAwDaJAAAAACGGBwGBgADAOIkAAAAAJEYIgZo
AQMAAAABAOoDAAABAOoDCQAcBgEAEQAcBgYAGQAcBgoAKQAcBhAAMQAcBhAAOQAcBhAAQQAcBhAA
SQAcBhAAUQAcBhAAWQAcBhAAYQAcBhAAaQAcBgYAeQAcBgYAyQAcBgYA8QAcBhUAcQBjBzoAAQHu
BkAACQHtBEYAEQHEA00A0QAKBFEAEQHYA00AIQEdAFUAIQEXBVoAIQFDAV8AKQEcBmUAkQAcBgYA
kQDNAG4AkQDgBHUAkQA2ARAAkQApARAAkQCwABAAmQAcBgYAmQATBBAAmQAqBXsAoQAcBgYAoQAa
B4EAQQEKAYcAOQGWAJAAmQD8BpoADAAOBrEAFAC1B8EAsQDuB8YAsQAcAVEA4QDFAcoAiQAKBM8A
GQGCB9cAcQGAAd4AeQF5BNcAoQDaB+QAuQD2BOkAsQBOAe8AsQCIAfQAoQB5B/gAiQGWAP4AkQHJ
B8YAmQEOAgYAEQHOAwQBAQGmBwEAcQAcBgYA0QAcBgYAQQHhBwkB2QAcBg8B+QAcBgYACAAYADIB
CAAcADcBIABrADcBIQBrADcBLgALAIABLgATAIkBLgAbAKgBLgAjALEBLgArANoBLgAzANoBLgA7
ANoBLgBDALEBLgBLAOABLgBTANoBLgBbAPcBQABrADcBQwBjADcBSQB7AKgBYwBzADcBaQB7AKgB
gQBrADcBGwACAAEAAwACAAQABAAAAKEEbAEAAPIFcQEAANIBdgEAAJ4HewECAAEAAwABAAIAAwAC
AAYABQACAAcABwABAAgABwACAAkACQCpALoABIAAAAEAAACWHPRpAAAAAAAAywUAAAQAAAAAAAAA
AAAAABcBcgAAAAAADgAAAAAAAAAAAAAAIAExBAAAAAABAAYABQBXJwAAAAApAZAHAAAAAAQAAAAA
AAAAAAAAABcBZgAAAAAABAAAAAAAAAAAAAAAFwH/BAAAAAAOAAAAAAAAAAAAAAAgAT8AAAAAAAAA
AAABAAAAbQYAAAUAAgAAAAAAAElFbnVtZXJhYmxlYDEASUVudW1lcmF0b3JgMQBUb0ludDE2ADxN
b2R1bGU+AFN5c3RlbS5JTwBXaW5TQ1AATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZh
bHVlX18AU3lzdGVtLkRhdGEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWRk
ADxwdGNsPmtfX0JhY2tpbmdGaWVsZABzZXRfUGFzc3dvcmQAZGVmYXVsdEluc3RhbmNlAHNldF9G
dHBNb2RlAERhdGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBnZXRfRnVsbE5hbWUAc2V0X1VzZXJOYW1lAHNldF9Ib3N0TmFtZQBU
b0RhdGVUaW1lAGdldF9MYXN0V3JpdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRp
bWUAQ29tYmluZQBnZXRfRmlsZVR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBy
ZXNvdXJjZUN1bHR1cmUAZ2V0X0ludmFyaWFudEN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9k
ZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0
dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlv
bkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVj
dEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5
UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmls
aXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAR2V0U2Vuc2l0aXZlVmFsdWUAdmFsdWUA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBzZXRfRXhlY3V0YWJsZVBhdGgAUmVt
b3RlUGF0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuVGFza3MuU2NyaXB0VGFzawBUcmFuc2xhdGVSZW1vdGVQYXRoVG9Mb2NhbABnZXRfcHRj
bABzZXRfcHRjbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU2NyQ2Fs
bFdpblNjcC5kbGwAc2V0X1Byb3RvY29sAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBFbnVtAHJl
c291cmNlTWFuAFRvQm9vbGVhbgBUaW1lU3BhbgBPcGVuAFNjcmlwdE1haW4ARGF0YUNvbHVtbgBT
ZXNzaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAFJlbW90ZUZp
bGVJbmZvAEN1bHR1cmVJbmZvAFNjckNhbGxXaW5TY3AAQ2hhcgBJRm9ybWF0UHJvdmlkZXIAZ2V0
X1Jlc291cmNlTWFuYWdlcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBT
eXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAFNUXzBlMWM5MjdjZTM5ZjQzM2U5NGU3NzcwZmNiYmEyYzA1LlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF8wZTFjOTI3Y2UzOWY0MzNlOTRl
Nzc3MGZjYmJhMmMwNS5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMARW51bWVyYXRlUmVtb3RlRmls
ZXMAU2V0dGluZ3MAZ2V0X0NvbHVtbnMAU3lzdGVtLkNvbGxlY3Rpb25zAFNlc3Npb25PcHRpb25z
AEVudW1lcmF0aW9uT3B0aW9ucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfUm93
cwBDb25jYXQAT2JqZWN0AFdpblNDUG5ldABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRf
Q3VycmVudABDb252ZXJ0AE1vdmVOZXh0AERhdGFSb3cATmV3Um93AGdldF9Bc3NlbWJseQBnZXRf
SXNEaXJlY3RvcnkAAAAAPyQAUABhAGMAawBhAGcAZQA6ADoAcABXAGkAbgBTAGMAcABFAHgAZQBj
AHUAdABhAGIAbABlAFAAYQB0AGgAACckAFAAYQBjAGsAYQBnAGUAOgA6AHAASABvAHMAdABOAGEA
bQBlAAAnJABQAGEAYwBrAGEAZwBlADoAOgBwAFUAcwBlAHIATgBhAG0AZQAAJyQAUABhAGMAawBh
AGcAZQA6ADoAcABQAGEAcwBzAHcAbwByAGQAAB8kAFAAYQBjAGsAYQBnAGUAOgA6AHAAUABvAHIA
dAAAKSQAUABhAGMAawBhAGcAZQA6ADoAcAB3AGkAbgBTAEMAUABMAG8AZwAAMSQAUABhAGMAawBh
AGcAZQA6ADoAcAB3AGkAbgBTAEMAUABMAG8AZwBQAGEAdABoAAA5JABQAGEAYwBrAGEAZwBlADoA
OgBwAEQAbwB3AG4AbABvAGEAZABEAGkAcgBlAGMAdABvAHIAeQAAFUMAdQBzAHQAbwBtAGUAcgBJ
AEQAAA1DAHUAcwB0AFMAQwAAE1AAcgBvAGMAZQBzAHMARABUAAAfQwB1AHMAdABJAG4AcAB1AHQA
RgBvAGwAZABlAHIAACUkAFAAYQBjAGsAYQBnAGUAOgA6AHAARgBUAFAARgBsAGEAZwAAC2YAVAB5
AHAAZQAAFUYAbwBsAGQAZQByAE4AYQBtAGUAACVGAG8AbABkAGUAcgBNAG8AZABpAGYAaQBlAGQA
RABhAHQAZQAAE0MAdQBzAHQAXwBDAG8AZABlAAAZUAByAG8AYwBlAHMAcwBfAGQAYQB0AGUAABlM
AG8AYwBhAGwARABpAHIAUABhAHQAaAAAByoALgAqAAADXwAAFXkAeQB5AHkAXwBNAE0AXwBkAGQA
ABl2AEYAbwBsAGQAZQByAEwAaQBzAHQAcwAAcVMAVABfADAAZQAxAGMAOQAyADcAYwBlADMAOQBm
ADQAMwAzAGUAOQA0AGUANwA3ADcAMABmAGMAYgBiAGEAMgBjADAANQAuAFAAcgBvAHAAZQByAHQA
aQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAPH3WcQAO0hGuEw5Y6MczwUABCABAQgDIAABBSAB
ARERBCABAQ4FIAEBEXUeBxEODg4ODg4OEUUODg4SSRJNElEVElUBElkSWRJdBSAAEoCBBSAAEoCF
BiABEoCJHAMgABwDIAAOBAABBg4EAAECHAUAARFFDgggBQEICAgICAYgAQERgJkFIAEBEUEFIAEB
EkkFIAASgJ0IAAESgKERgKUJIAISgKkOEoChDiADFRKArQESWQ4OEYCxBxUSgK0BElkIIAAVElUB
EwAGFRJVARJZBCAAEwADIAACBAAAEnEHIAIODhKAtQYAAw4ODg4FAAIODg4EIAASXQUgAgEOHAQg
ABFFAyAAAwUgABKAxQUgAQESXQQgAQEcBSAAEoDRByACAQ4SgNEIt3pcVhk04IkIiYRdzYCAzJEI
InHsSjxW0L8EAAAAAAQBAAAAAwYRQQMGEm0DBhJxAwYSEAIGCAMGERQEIAARQQQAABJtBQABARJx
BAAAEhADAAABBCgAEUEECAASbQQIABJxBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzBlMWM5MjdjZTM5ZjQzM2U5NGU3NzcwZmNiYmEy
YzA1AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAEkBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAAAtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAAFw5AAAAAAAAAAAAAHY5AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoOQAAAAAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADCAwAAAAAAAAAAAADCAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEA9GmWHAAAAQD0aZYcPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEIgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA/gIAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwAwAGUAMQBjADkAMgA3AGMAZQAzADkAZgA0ADMAMwBlADkANABlADcANwA3ADAAZgBjAGIA
YgBhADIAYwAwADUAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwAz
ADEAOAAuADIANwAxADIANAAAAAAARAASAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAGMA
cgBDAGEAbABsAFcAaQBuAFMAYwBwAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQBy
AGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAAqAAEAAQBMAGUA
ZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAEwAEgABAE8AcgBpAGcAaQBuAGEAbABG
AGkAbABlAG4AYQBtAGUAAABTAGMAcgBDAGEAbABsAFcAaQBuAFMAYwBwAC4AZABsAGwAAABoACQA
AQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADAAZQAxAGMAOQAyADcAYwBlADMAOQBm
ADQAMwAzAGUAOQA0AGUANwA3ADcAMABmAGMAYgBiAGEAMgBjADAANQAAAEIADwABAFAAcgBvAGQA
dQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwAzADEAOAAuADIANwAxADIANAAAAAAARgAP
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwAzADEAOAAuADIA
NwAxADIANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAiDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\LoopAllCustomers\UploadFTPFolderListsToDB"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{A8666F13-F61B-4A25-84A8-21229C250084}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="UploadFTPFolderListsToDB"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_4ab634a12f29442da3af46ed15b7fd1d"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::vFolderLists">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ST_4ab634a12f29442da3af46ed15b7fd1d.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{88FBD480-5258-4643-9302-089EC24525D0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4ab634a12f29442da3af46ed15b7fd1d</RootNamespace>
    <AssemblyName>FTPFolderstoDB</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
#endregion

namespace FTPFolderstoDB
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            String strFolderstoDB;
            ConnectionManager cm;
            SqlConnection sqlConn;
            SqlCommand sqlComm;

            cm = Dts.Connections["CCPL"];
            sqlConn = (SqlConnection)cm.AcquireConnection(Dts.Transaction);

            //////            Dim cmd1 As SqlCommand
            //////    cmd1 = New SqlCommand("INSERT INTO Students (student_fullname, student_branch, student_scholarship) VALUES (@student_fullname, @student_branch, @student_scholarship)", con)

            //////cmd1.Parameters.Add(new SqlParameter(@student_fullname, nothing))
            //////cmd1.Parameters.Add(new SqlParameter(@student_branch, nothing))
            //////cmd1.Parameters.Add(new SqlParameter(@student_scholarship, nothing))

            //////For Each Drr As DataRow In DtSet.Tables(0).Rows
            //////    cmd1.Parameters(@student_fullname).Value = Drr(1)
            //////    cmd1.Parameters(@student_branch).Value = Drr(2)
            //////    cmd1.Parameters(@student_scholarship).Value = Drr(3)

            //strFolderstoDB = "INSERT INTO [IE_FTPDirectoryByCustomer] (Cust_ID, Process_date, DirPath) VALUES (@Cust_ID, @Process_date, @DirPath)";
            strFolderstoDB = "INSERT INTO [IE_FTPDirectoryByCustomer] (DirPath) VALUES ( @DirPath)";
            ////sqlComm = new SqlCommand(strFolderstoDB, sqlConn);
            ////sqlComm.Parameters.Add(new SqlParameter("@DirPath", SqlDbType.Text));
            
            ///sqlComm.Parameters.Add(new SqlParameter("@DirPath", SqlDbType.Text));
            //sqlComm.Parameters.Add(new SqlParameter("@DirPath", SqlDbType.Text));

            DataTable dtFolders = (DataTable) Dts.Variables["User::vFolderLists"].Value;

            ////// Iterate through each row in this DataTable object, writing each to a new row in the Output
            ////foreach (DataRow row in dtFolders.Rows)
            ////{

            ////    sqlComm.Parameters["@DirPath"].Value=row[1].ToString();

            ////    //MessageBox.Show( row[0].ToString());
            ////    MessageBox.Show(row[1].ToString());
            ////    //MessageBox.Show(row[2].ToString());
            ////    //DateTime.Parse(row["ModifiedDate"].ToString());

            ////    sqlComm.ExecuteNonQuery();

            ////}
            ///

            if (dtFolders.Rows.Count > 0)
            {
            
                    using (SqlBulkCopy sqlBulkCopy = new SqlBulkCopy(sqlConn))
                    {
                        //Set the database table name
                        sqlBulkCopy.DestinationTableName = "[IE_FTPDirectoryByCustomer]";

                        ////[OPTIONAL]: Map the DataTable columns with that of the database table
                        sqlBulkCopy.ColumnMappings.Add(dtFolders.Columns[1].ColumnName , "DirPath");
                        sqlBulkCopy.ColumnMappings.Add(dtFolders.Columns[3].ColumnName, "Cust_Code");
                        sqlBulkCopy.ColumnMappings.Add(dtFolders.Columns[4].ColumnName, "Process_date");
                        sqlBulkCopy.ColumnMappings.Add(dtFolders.Columns[5].ColumnName, "LocalDirPath");
                    

                        sqlBulkCopy.WriteToServer(dtFolders);
                        sqlConn.Close();
                    }
                
            }




            cm.ReleaseConnection(sqlConn);

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_4ab634a12f29442da3af46ed15b7fd1d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_4ab634a12f29442da3af46ed15b7fd1d</msb:DisplayName>
    <msb:ProjectId>{42FC8427-BB96-4CB6-8AA4-A907E2C32380}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_4ab634a12f29442da3af46ed15b7fd1d.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4ab634a12f29442da3af46ed15b7fd1d.Properties.Settings.get_Default():ST_4ab634a12f29442da3af46ed15b7fd1d.Properties.Sett" +
    "ings")]

namespace ST_4ab634a12f29442da3af46ed15b7fd1d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4ab634a12f29442da3af46ed15b7fd1d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4ab634a12f29442da3af46ed15b7fd1d")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4ab634a12f29442da3af46ed15b7fd1d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4ab634a12f29442da3af46ed15b7fd1d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4ab634a12f29442da3af46ed15b7fd1d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4ab634a12f29442da3af46ed15b7fd1d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4ab634a12f29442da3af46ed15b7fd1d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="FTPFolderstoDB.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABSFHV4AAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAA3jEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIwxAABPAAAAAEAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5BEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
MQAAAAAAAEgAAAACAAUA/CEAANgOAAABAAAAAAAAANQwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwAlAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACgoG
AigQAAAKbxMAAApvFAAACnQQAAABCwIoEAAACm8VAAAKcgsAAHBvFgAACm8XAAAKdBEAAAEMCG8Y
AAAKbxkAAAoWPrMAAAAHcxoAAAoNCXIxAABwbxsAAAoJbxwAAAoIbx0AAAoXbx4AAApvHwAACnJp
AABwbyAAAAomCW8cAAAKCG8dAAAKGW8eAAAKbx8AAApyeQAAcG8gAAAKJglvHAAACghvHQAAChpv
HgAACm8fAAAKco0AAHBvIAAACiYJbxwAAAoIbx0AAAobbx4AAApvHwAACnKnAABwbyAAAAomCQhv
IQAACgdvIgAACt4KCSwGCW8jAAAK3AYHbyQAAAoCKBAAAAoWbyUAAAoqAAAAARAAAAIAZQCiBwEK
AAAAAB4CKCYAAAoqHgIoJwAACiqufgEAAAQtHnLBAABw0AMAAAIoKAAACm8pAAAKcyoAAAqAAQAA
BH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigrAAAKKi5zCAAABoADAAAEKgAAQlNKQgEA
AQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAgAQAACN+AADsBAAA9AYAACNTdHJpbmdzAAAA
AOALAAA0AQAAI1VTABQNAAAQAAAAI0dVSUQAAAAkDQAAtAEAACNCbG9iAAAAAAAAAAIAAAFXHaIB
CQMAAAD6ATMAFgAAAQAAACoAAAAFAAAABgAAAAkAAAABAAAAKwAAAAIAAAAQAAAAAQAAAAIAAAAD
AAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAOcDAQAAAAAABgCHAnkFBgAWA3kFBgDTAWYFDwDtBQAA
BgAAAmsEBgBqAmsEBgBLAmsEBgD9AmsEBgCnAmsEBgDAAmsEBgAXAmsEBgAyAkQDCgDbApYDCgAp
AZYDDgA5BdQAEgD4BLoGEgBpAEAAEgDnBroGBgAKBAMEBgC2AWYFBgCYBgMEBgApBZkFBgAZBUYE
FgCGAdEDFgDnAdEDFgBgATEEBgCbAXkFCgC/A5YDDgBlBtQADgAvBtQADgBzANQAEgC1BEAAEgBF
AUAAEgB9BLoGEgCgBEAAEgAmBEAAEgBeA7oGEgDHBAYFBgB8AAMEBgD0AAMEBgCIAAMEBgDeBmsE
AAAAAAEAAAAAAAEAAQABABAAGwQKADkAAQABAAAAEACgBfwFVQABAAMAAAEQAEwG/AVpAAMABwAD
AQAAgQYAAE0ABAAKABEADwS3ABEAGQG7ABEAWQC/AAYGOADDAFaAcQbGAFaA+QDGAFAgAAAAAIYA
IQQGAAEAlCEAAAAAhhhZBQYAAQCcIQAAAACDGFkFBgABAKQhAAAAAJMIJQXKAAEA0CEAAAAAkwgB
Ac8AAQDXIQAAAACTCA0B1AABAN8hAAAAAJYInwbaAAIA5iEAAAAAhhhZBQYAAgDuIQAAAACRGF8F
3wACAAAAAQA+AwkAWQUBABEAWQUGABkAWQUKACkAWQUQADEAWQUQADkAWQUQAEEAWQUQAEkAWQUQ
AFEAWQUQAFkAWQUQAGEAWQUQAGkAWQUGAKEAWQUGAMkAWQUVANkAWQUGAHEAeQYmAOEAYQYrAOkA
+gMwAOEAWwQ2AHkA1AQ6AOEAKwY/APEA+gNEAPkANAM2AIkAjwZKAAkB0AZQAJEAWQVUAJEArAAQ
AJEAOQZaAIkAVQZgABkB+gNmACEBxQBtABEBVQBxAJEASwV5ADEBeAEGADkBfgEGAHkA5gR/AOEA
qwYBAHEAWQUGAKkAWQUGAEEBmgCEAEEB2gaNALEAWQWTANEAWQUGAAgAFACtAAgAGACyACkAcwAa
AS4ACwDyAC4AEwD7AC4AGwAaAS4AIwAjAS4AKwBMAS4AMwBMAS4AOwBMAS4AQwAjAS4ASwBSAS4A
UwBMAS4AWwBpAUMAYwCyAEkAcwAaAWEAewCyAGMAawCyABsAAwABAAQAAwAAACkF4wAAACEB6AAA
AKMG7QACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAJYcemoAAAAAAAAKAAAABAAAAAAA
AAAAAAAAmwBMAAAAAAAOAAAAAAAAAAAAAACkAHcDAAAAAA4AAAAAAAAAAAAAAKQAGQAAAAAABAAA
AAAAAAAAAAAAmwBAAAAAAAAEAAAAAAAAAAAAAACbAAMEAAAAAAAAAAABAAAAqgUAAAUAAgAAAAAA
ADxNb2R1bGU+AEZUUEZvbGRlcnN0b0RCAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2
YWx1ZV9fAFN5c3RlbS5EYXRhAG1zY29ybGliAEFkZABkZWZhdWx0SW5zdGFuY2UARGF0YVRhYmxl
AFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AHNldF9EZXN0aW5hdGlvblRhYmxlTmFtZQBnZXRfQ29sdW1uTmFtZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEludGVybmFsRGF0YUNvbGxl
Y3Rpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAERpc3Bvc2UARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBB
c3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFNxbEJ1bGtDb3B5Q29sdW1uTWFwcGluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlw
dFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmpl
Y3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwARlRQRm9sZGVyc3RvREIuZGxsAGdldF9JdGVt
AFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4ARGF0YUNvbHVtbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBnZXRfVHJhbnNhY3Rpb24AU3lzdGVtLlJl
ZmxlY3Rpb24AU3FsQnVsa0NvcHlDb2x1bW5NYXBwaW5nQ29sbGVjdGlvbgBEYXRhQ29sdW1uQ29s
bGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBEYkNvbm5lY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24A
UmVsZWFzZUNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3VsdHVy
ZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBDb25uZWN0aW9uTWFuYWdlcgBXcml0ZVRvU2VydmVy
AC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJT
ZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzRhYjYzNGExMmYyOTQ0MmRhM2FmNDZlZDE1Yjdm
ZDFkLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF80YWI2
MzRhMTJmMjk0NDJkYTNhZjQ2ZWQxNWI3ZmQxZC5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAZ2V0
X0NvbHVtbk1hcHBpbmdzAFNldHRpbmdzAGdldF9Db2x1bW5zAGdldF9Db25uZWN0aW9ucwBTdWNj
ZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfUm93cwBPYmplY3QAZ2V0X0RlZmF1bHQAc2V0
X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AGdldF9Db3VudABnZXRfQXNzZW1ibHkA
U3FsQnVsa0NvcHkAAAAJQwBDAFAATAAAJVUAcwBlAHIAOgA6AHYARgBvAGwAZABlAHIATABpAHMA
dABzAAA3WwBJAEUAXwBGAFQAUABEAGkAcgBlAGMAdABvAHIAeQBCAHkAQwB1AHMAdABvAG0AZQBy
AF0AAA9EAGkAcgBQAGEAdABoAAATQwB1AHMAdABfAEMAbwBkAGUAABlQAHIAbwBjAGUAcwBzAF8A
ZABhAHQAZQAAGUwAbwBjAGEAbABEAGkAcgBQAGEAdABoAABxUwBUAF8ANABhAGIANgAzADQAYQAx
ADIAZgAyADkANAA0ADIAZABhADMAYQBmADQANgBlAGQAMQA1AGIANwBmAGQAMQBkAC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAgBVDAFlJXk2mLPyrDgALAwAEIAEB
CAMgAAEFIAEBEREEIAEBDgUgAQERYQoHBBI9EkESRRJJBCAAEnEEIAASdQUgARI9HAMgABwEIAEc
HAQgABJ5BSABEn0cBSAAEoCBAyAACAUgAQESQQUgABKAiQUgABKAjQYgARKAkQgDIAAOByACEoCV
Dg4FIAEBEkUEIAEBHAgAARKAoRGApQUgABKAqQcgAgEOEoCpCLd6XFYZNOCJCImEXc2AgMyRBAAA
AAAEAQAAAAMGElkDBhJdAwYSEAIGCAMGERQEAAASWQQAABJdBQABARJdBAAAEhADAAABBAgAElkE
CAASXQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAA
ACgBACNTVF80YWI2MzRhMTJmMjk0NDJkYTNhZjQ2ZWQxNWI3ZmQxZAAABQEAAAAAFgEAEUNvcHly
aWdodCBAICAyMDIwAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAtDEAAAAAAAAAAAAA
zjEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAxAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAygMAAAAAAAAAAAAAygM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAHpqlhwAAAEAemqWHD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBCoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAAYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8ANABhAGIANgAzADQAYQAxADIAZgAyADkANAA0ADIAZABhADMAYQBmADQANgBlAGQA
MQA1AGIANwBmAGQAMQBkAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADcAMwAxADgALgAyADcAMgA1ADgAAAAAAEYAEwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
RgBUAFAARgBvAGwAZABlAHIAcwB0AG8ARABCAC4AZABsAGwAAAAAAEgAEgABAEwAZQBnAGEAbABD
AG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoA
AQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAATgATAAEATwByAGkAZwBp
AG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAEYAVABQAEYAbwBsAGQAZQByAHMAdABvAEQAQgAuAGQA
bABsAAAAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADQAYQBiADYAMwA0
AGEAMQAyAGYAMgA5ADQANAAyAGQAYQAzAGEAZgA0ADYAZQBkADEANQBiADcAZgBkADEAZAAAAEIA
DwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwAzADEAOAAuADIANwAy
ADUAOAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
NwAzADEAOAAuADIANwAyADUAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAOAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\LoopAllCustomers.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{7A78F0B9-3D11-474C-9C46-3BDA1CAEB765}"
          DTS:From="Package\LoopAllCustomers\GetDirectoryListsFromFTPServer"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\LoopAllCustomers\UploadFTPFolderListsToDB" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{A98760C5-60F2-4C60-8FC2-0ECB2553B14C}"
          DTS:ObjectName="{4F6AD5B8-17DD-4488-9CF5-329AC30A8AB2}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CustomerID" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{3E922358-B005-4567-809E-C36871A1B9D6}"
          DTS:ObjectName="{4DA6245E-D950-4506-8BD3-86F1DA49593B}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::CustSC" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{E2130AC4-4A4E-46C3-B8CC-0630F5F2847A}"
          DTS:ObjectName="{3BFBC621-54D0-4373-98B1-FB3F247DBB1B}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::CustInputFolder" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\UploadDirectoriestoDBByCustomer"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{4B39B988-54F2-4924-B872-F4DF1EB2306D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="UploadDirectoriestoDBByCustomer"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AF8E99B7-584A-4E16-AB70-10B6A892751C}"
          SQLTask:SqlStatementSource="INSERT INTO IE_FTPDirectoryByCustomer&#xA;                  (Cust_ID, Process_date, DirPath, NoOfFiles)&#xA;VALUES (?,?,?,0)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{986E91CF-DF9A-4757-99BC-EC26A83088BB}"
      DTS:From="Package\GetAllCustomersfromDB"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\LoopAllCustomers" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="192,41.6"
          Id="Package\GetAllCustomersfromDB"
          TopLeft="99.3333293861814,4.85333337190417" />
        <NodeLayout
          Size="232.8,41.6"
          Id="Package\LoopAllCustomers\GetDirectoryListsFromFTPServer"
          TopLeft="36.2333342340257,22.0066673223708" />
        <NodeLayout
          Size="208.8,41.6"
          Id="Package\LoopAllCustomers\UploadFTPFolderListsToDB"
          TopLeft="42.2666634612615,101.33333504147" />
        <EdgeLayout
          Id="Package\LoopAllCustomers.PrecedenceConstraints[Constraint]"
          TopLeft="149.649998847644,63.6066673223708">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.726667719099"
              Start="0,0"
              End="0,30.226667719099">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.226667719099" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="334.4,197.6"
          Size="334.4,240.8"
          Id="Package\LoopAllCustomers"
          TopLeft="38.6666651301915,70.0266672231883" />
        <NodeLayout
          Size="241.6,41.6"
          Id="Package\UploadDirectoriestoDBByCustomer"
          TopLeft="494.66664701038,117.173334264543" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="195.333329386181,46.4533333719042">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.5333357440101,23.5733338512841"
              Start="0,0"
              End="10.5333357440101,16.0733338512841">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.78666692564206" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.78666692564206"
                    Point2="0,11.7866669256421"
                    Point3="4,11.7866669256421" />
                  <mssgle:LineSegment
                    End="6.53333574401012,11.7866669256421" />
                  <mssgle:CubicBezierSegment
                    Point1="6.53333574401012,11.7866669256421"
                    Point2="10.5333357440101,11.7866669256421"
                    Point3="10.5333357440101,15.7866669256421" />
                  <mssgle:LineSegment
                    End="10.5333357440101,16.0733338512841" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>